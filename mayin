import java.util.Random;
import java.util.Scanner;

public class MineSweeper {
    private int rowSize;
    private int colSize;
    private int mineCount;
    private int[][] board;
    private boolean[][] revealed;
    private boolean gameOver;

    public MineSweeper(int rowSize, int colSize) {
        this.rowSize = rowSize;
        this.colSize = colSize;
        this.mineCount = rowSize * colSize / 4;
        this.board = new int[rowSize][colSize];
        this.revealed = new boolean[rowSize][colSize];
        this.gameOver = false;
    }

    public void play() {
        initializeBoard();

        while (!gameOver) {
            printBoard();
            int[] point = getPointFromUser();
            int row = point[0];
            int col = point[1];

            if (isMine(row, col)) {
                System.out.println("Mayına bastınız! Oyunu kaybettiniz.");
                gameOver = true;
            } else {
                int mineCount = countAdjacentMines(row, col);
                board[row][col] = mineCount;
                revealed[row][col] = true;

                if (isGameWon()) {
                    System.out.println("Tebrikler! Tüm noktaları seçtiniz. Oyunu kazandınız.");
                    gameOver = true;
                }
            }
        }
    }

    private void initializeBoard() {
        placeMines();
    }

    private void placeMines() {
        Random random = new Random();

        for (int i = 0; i < mineCount; i++) {
            int row, col;
            do {
                row = random.nextInt(rowSize);
                col = random.nextInt(colSize);
            } while (isMine(row, col));

            board[row][col] = -1;
        }
    }

    private boolean isMine(int row, int col) {
        return board[row][col] == -1;
    }

    private int countAdjacentMines(int row, int col) {
        int count = 0;

        for (int i = row - 1; i <= row + 1; i++) {
            for (int j = col - 1; j <= col + 1; j++) {
                if (isValidPoint(i, j) && isMine(i, j)) {
                    count++;
                }
            }
        }

        return count;
    }

    private boolean isValidPoint(int row, int col) {
        return row >= 0 && row < rowSize && col >= 0 && col < colSize;
    }

    private boolean isGameWon() {
        for (int i = 0; i < rowSize; i++) {
            for (int j = 0; j < colSize; j++) {
                if (!revealed[i][j] && !isMine(i, j)) {
                    return false;
                }
            }
        }
        return true;
    }

    private void printBoard() {
        System.out.println("Mayın Tarlası");
        System.out.print("  ");
        for (int j = 0; j < colSize; j++) {
            System.out.print(j + " ");
        }
        System.out.println();

        for (int i = 0; i < rowSize; i++) {
            System.out.print(i + " ");
            for (int j = 0; j < colSize; j++) {
                                if (revealed[i][j]) {
                    if (isMine(i, j)) {
                        System.out.print("* ");
                    } else {
                        System.out.print(board[i][j] + " ");
                    }
                } else {
                    System.out.print(". ");
                }
            }
            System.out.println();
        }
    }

    private int[] getPointFromUser() {
        Scanner scanner = new Scanner(System.in);
        int[] point = new int[2];

        do {
            System.out.print("Satır seçin (0 - " + (rowSize - 1) + "): ");
            point[0] = scanner.nextInt();

            System.out.print("Sütun seçin (0 - " + (colSize - 1) + "): ");
            point[1] = scanner.nextInt();

            if (!isValidPoint(point[0], point[1])) {
                System.out.println("Geçersiz bir nokta girdiniz. Lütfen tekrar deneyin.");
            }
        } while (!isValidPoint(point[0], point[1]));

        return point;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Satır sayısını girin: ");
        int rowSize = scanner.nextInt();

        System.out.print("Sütun sayısını girin: ");
        int colSize = scanner.nextInt();

        MineSweeper game = new MineSweeper(rowSize, colSize);
        game.play();
    }
}

